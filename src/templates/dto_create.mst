/*
 Genreic things to think on!
*/

{{#*inline "Index"}}
{{/inline}}
{{#*inline "Import"}}
{{/inline}}
{{#*inline "Column"}}

@Field((type)=>{{toGrapqlType tscType}}, { {{json optionsDto}} })
{{printPropertyVisibility}}{{toPropertyName tscName}}{{strictMode}}:{{tscType}}{{#if options.nullable}} | null{{/if}};
{{/inline}}

{{#*inline "Relation"}}
{{/inline}}

{{#*inline "RelationId"}}
{{/inline}}

{{#*inline "Constructor"}}
{{printPropertyVisibility}}constructor(init?: Partial<{{toEntityName entityName}}>) {
    {{#activeRecord}}super();
    {{/activeRecord}}Object.assign(this, init);
}
{{/inline}}
{{#*inline "Entity"}}
{{#indices}}{{> Index}}{{/indices~}}
@InputType()
export {{defaultExport}} class {{toEntityName createName}}{{#activeRecord}} extends BaseEntity{{/activeRecord}} {

{{#columns}}{{> Column}}{{/columns~}}
{{#if generateConstructor}}{{>Constructor entityName=tscName}}{{/if~}}
}
{{/inline}}
import { Field, InputType, Int } from "@nestjs/graphql";
import { IsEmail,  IsNotEmpty } from "class-validator";
{{#fileImports}}{{> Import}}{{/fileImports}}

{{> Entity}}
