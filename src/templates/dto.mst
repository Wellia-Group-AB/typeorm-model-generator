{{#*inline "Index"}}
{{/inline}}
{{#*inline "Import"}}
import {{localImport (toEntityName entityName)}} from './{{toFileName fileName}}'
{{/inline}}
{{#*inline "Column"}}

{{#generated}}@Field({ type:"{{type}}", {{/generated}}{{^generated}}@Field("{{type}}",{ {{#primary}}primary:{{primary}},{{/primary}}{{/generated}}{{json options}}{{#default}},default: {{.}},{{/default}} })
{{printPropertyVisibility}}{{toPropertyName tscName}}{{strictMode}}:{{tscType}}{{#if options.nullable}} | null{{/if}};
{{/inline}}
{{#*inline "JoinColumnOptions"}}
{ name: "{{name}}", referencedColumnName: "{{toPropertyName referencedColumnName}}" },
{{/inline}}

{{#*inline "Relation"}}
{{/inline}}

{{#*inline "RelationId"}}
{{/inline}}

{{#*inline "Constructor"}}
{{printPropertyVisibility}}constructor(init?: Partial<{{toEntityName entityName}}>) {
    {{#activeRecord}}super();
    {{/activeRecord}}Object.assign(this, init);
}
{{/inline}}
{{#*inline "Entity"}}
{{#indices}}{{> Index}}{{/indices~}}
@Entity("{{sqlName}}"{{#schema}} ,{schema:"{{.}}"{{#if ../database}}, database:"{{../database}}"{{/if}} } {{/schema}})
export {{defaultExport}} class {{toEntityName tscName}}{{#activeRecord}} extends BaseEntity{{/activeRecord}} {

{{#columns}}{{> Column}}{{/columns~}}
{{#if generateConstructor}}{{>Constructor entityName=tscName}}{{/if~}}
}
{{/inline}}
import {BaseEntity,Column,Entity,Index,JoinColumn,JoinTable,ManyToMany,ManyToOne,OneToMany,OneToOne,PrimaryColumn,RelationId} from "typeorm";
{{#fileImports}}{{> Import}}{{/fileImports}}

{{> Entity}}
