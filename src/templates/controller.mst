import {
  Controller,
  Get,
  Post,
  Body,
  Patch,
  Param,
  Delete
} from '@nestjs/common';
import { {{toEntityName tscName}}Service } from './{{toFileName tscName}}.service';
import { Create{{toEntityName tscName}}Input } from './dto/create-{{toFileName tscName}}.input';
import { Update{{toEntityName tscName}}Input } from './dto/update-{{toFileName tscName}}.input';
import { ApiBearerAuth, ApiBody, ApiTags } from '@nestjs/swagger';

@ApiTags('{{tscName}}')
@ApiBearerAuth()
@Controller('{{tscName}}')
export class {{toEntityName tscName}}Controller {

  constructor(private readonly {{tscName}}Service: {{toEntityName tscName}}Service) {}

  @ApiBody({ type: Create{{toEntityName tscName}}Input })
  @Post()
  create(@Body() create{{toEntityName tscName}}Input: Create{{toEntityName tscName}}Input) {
    return this.{{tscName}}Service.create(create{{toEntityName tscName}}Input);
  }

  @Get()
  findAll() {
    return this.{{tscName}}Service.findAll();
  }

  @Get(':id')
  findOne(@Param('id') id: string) {
    return this.{{tscName}}Service.findOne(id);
  }

  @ApiBody({ type: Update{{toEntityName tscName}}Input })
  @Patch(':id')
  update(@Param('id') id: string, @Body() update{{toEntityName tscName}}Input: Update{{toEntityName tscName}}Input) {
    return this.{{tscName}}Service.update(id, update{{toEntityName tscName}}Input);
  }

  @Delete(':id')
  remove(@Param('id') id: string) {
    return this.{{tscName}}Service.remove(id);
  }
}
